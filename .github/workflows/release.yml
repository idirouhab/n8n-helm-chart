name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.1'

      - name: Validate Chart
        run: |
          helm lint charts/n8n-app
          helm template test-release charts/n8n-app --dry-run

      - name: Package Chart
        run: |
          helm package charts/n8n-app --destination ./charts/

      - name: Extract Release Notes
        id: extract_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Extract release notes from CHANGELOG.md
          sed -n "/## \[${VERSION}\]/,/## \[/p" CHANGELOG.md | head -n -1 | tail -n +2 > release_notes.md
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.extract_notes.outputs.NOTES }}
          files: |
            charts/*.tgz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Chart Repository Index
        if: github.repository == 'idirouhab/n8n-helm-chart'  # Update with actual repo
        run: |
          # This would update a chart repository index
          # Customize based on your chart hosting strategy
          echo "Chart packaged successfully"