name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.1'

      - name: Update Chart Version
        run: |
          # Extract version from tag (remove 'v' prefix)
          CHART_VERSION="${{ needs.release-please.outputs.tag_name }}"
          CHART_VERSION="${CHART_VERSION#v}"
          sed -i "s/^version:.*/version: $CHART_VERSION/" charts/n8n-app/Chart.yaml
          
          echo "Updated chart version to: $CHART_VERSION"

      - name: Package Chart
        run: |
          helm package charts/n8n-app --destination ./charts/

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} charts/*.tgz --clobber

      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_TOKEN" ]; then
            echo "‚ùå DOCKERHUB_USERNAME or DOCKERHUB_TOKEN secrets not set"
            exit 1
          fi
          echo "$DOCKERHUB_TOKEN" | helm registry login registry-1.docker.io -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Push chart to Docker Hub OCI
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          CHART_NAME=$(helm show chart charts/n8n-app | awk '/^name:/{print $2}')
          CHART_VERSION=$(helm show chart charts/n8n-app | awk '/^version:/{print $2}')
          helm push "charts/${CHART_NAME}-${CHART_VERSION}.tgz" "oci://registry-1.docker.io/${DOCKERHUB_USERNAME}"
          echo "‚úÖ Chart published: oci://registry-1.docker.io/${DOCKERHUB_USERNAME}/${CHART_NAME}:${CHART_VERSION}"
          echo "üîó Docker Hub repo: https://hub.docker.com/repository/docker/${DOCKERHUB_USERNAME}/${CHART_NAME}/general"

      - name: Install ORAS
        uses: oras-project/setup-oras@v1
        with:
          version: 1.0.0

      - name: Tag Helm chart as :latest
        if: ${{ !contains(needs.release-please.outputs.tag_name, '-') }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          CHART_NAME=$(helm show chart charts/n8n-app | awk '/^name:/{print $2}')
          CHART_VERSION=$(helm show chart charts/n8n-app | awk '/^version:/{print $2}')
          echo "$DOCKERHUB_TOKEN" | oras login registry-1.docker.io -u "$DOCKERHUB_USERNAME" --password-stdin

          SRC="registry-1.docker.io/${DOCKERHUB_USERNAME}/${CHART_NAME}:${CHART_VERSION}"
          DST="registry-1.docker.io/${DOCKERHUB_USERNAME}/${CHART_NAME}:latest"

          oras copy "${SRC}" "${DST}"
          echo "üîñ Tagged ${SRC} as ${DST}"
