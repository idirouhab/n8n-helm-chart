name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.1'

      - name: Package Chart
        run: |
          helm package charts/n8n-app --destination ./charts/

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} charts/*.tgz

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push to Docker Hub OCI Registry
        run: |
          CHART_NAME=$(helm show chart charts/n8n-app | grep '^name:' | cut -d' ' -f2)
          CHART_VERSION=$(helm show chart charts/n8n-app | grep '^version:' | cut -d' ' -f2)
          
          helm push charts/${CHART_NAME}-${CHART_VERSION}.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}
          
          echo "âœ… Chart published to: oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${CHART_NAME}"
          echo "ðŸ“¦ Version: ${CHART_VERSION}"
          echo "ðŸ”— Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/${CHART_NAME}"